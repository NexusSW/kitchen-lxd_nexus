#!/usr/bin/env ruby

require 'kitchen'
require 'yaml'
require 'pp'

state = YAML.load_file ARGV[0]
pp state
require 'kitchen/driver/lxd/host_locator'
require 'nio/websocket'

NIO::WebSocket::Reactor.start
class NxHost
  include HostLocator
  def initialize(config)
    @config = config
  end
  attr_reader :config
end

driver = NxHost.new state[:reference]
# driver = Kitchen::Driver.for_plugin 'lxd', state[:reference]
transport = driver.nx_transport state

transport.execute 'bash', capture: :interactive do |active|
  active.capture_output do |stdout|
    puts stdout
  end
  NIO::WebSocket::Reactor.queue_task do
    NIO::WebSocket::Reactor.selector.register($stdin, :r).tap do |mon|
      mon.value = proc do
        begin
          active.stdin.write monio.read_nonblock(16384)
        rescue IO::WaitReadable # rubocop:disable Lint/ShadowedException
          return nil
        rescue Errno::ECONNRESET, EOFError, IOError
          mon.close
          return nil
        end
      end
    end
  end
  active.thread.join
end
